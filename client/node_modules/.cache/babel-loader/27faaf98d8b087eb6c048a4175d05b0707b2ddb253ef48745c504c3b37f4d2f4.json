{"ast":null,"code":"var _jsxFileName = \"F:\\\\Coding\\\\MERN\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api';\nimport MessageList from '../components/MessageList';\nimport { connectSocket, getSocket, disconnectSocket } from '../socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  var _me$name;\n  const [users, setUsers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const me = JSON.parse(localStorage.getItem('user') || 'null');\n  const pollingRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!me) return;\n    API.get('/api/users').then(res => setUsers(res.data)).catch(() => {});\n    // connect socket and set presence\n    const s = connectSocket();\n    s.emit('presence', {\n      userId: me._id\n    });\n    s.on('message', msg => {\n      // if message is for selected or for current user, refresh\n      if (selected && (msg.roomId === selected._id || msg.from === selected._id || msg.to === selected._id)) {\n        fetchMessages();\n      }\n      // else you could show a badge/notification\n    });\n    return () => {\n      // cleanup\n      s.off('message');\n    };\n  }, []);\n  useEffect(() => {\n    if (!selected) return;\n    fetchMessages();\n    pollingRef.current = setInterval(fetchMessages, 3000);\n    return () => clearInterval(pollingRef.current);\n  }, [selected]);\n  useEffect(() => {\n    return () => {\n      disconnectSocket();\n    };\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const res = await API.get('/api/messages/' + selected._id);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const send = async e => {\n    e.preventDefault();\n    if (!text.trim() || !selected) return;\n    try {\n      const body = {\n        to: selected._id,\n        content: text\n      };\n      const res = await API.post('/api/messages', body);\n      // emit via socket for live update\n      const s = getSocket();\n      if (s) s.emit('sendMessage', res.data);\n      setText('');\n      fetchMessages();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const logout = () => {\n    // stop polling\n    if (pollingRef.current) clearInterval(pollingRef.current);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 10,\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: me === null || me === void 0 ? void 0 : (_me$name = me.name) === null || _me$name === void 0 ? void 0 : _me$name.split(' ').map(s => s[0]).slice(0, 2).join('').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"me\",\n            children: me === null || me === void 0 ? void 0 : me.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: '#64748b'\n            },\n            children: me === null || me === void 0 ? void 0 : me.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"avatarFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const f = document.getElementById('avatarFile').files[0];\n            if (!f) return alert('Pick a file first');\n            const fd = new FormData();\n            fd.append('avatar', f);\n            const res = await API.post('/api/users/avatar', fd, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            localStorage.setItem('user', JSON.stringify(res.data));\n            window.location.reload();\n          },\n          children: \"Upload avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        children: users.filter(u => u._id !== (me === null || me === void 0 ? void 0 : me._id)).map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user ${(selected === null || selected === void 0 ? void 0 : selected._id) === u._id ? 'active' : ''}`,\n          onClick: () => setSelected(u),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: u.name.split(' ').map(s => s[0]).slice(0, 2).join('').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 600\n              },\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#64748b'\n              },\n              children: u.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, u._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [\"Chat with \", selected.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n          messages: messages,\n          currentUserId: me === null || me === void 0 ? void 0 : me._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"composer\",\n          onSubmit: send,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: text,\n            onChange: e => setText(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: \"Select a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"rmlrql7mhQnqPhnXR2Z5Dczxdqc=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","API","MessageList","connectSocket","getSocket","disconnectSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_me$name","users","setUsers","selected","setSelected","messages","setMessages","text","setText","me","JSON","parse","localStorage","getItem","pollingRef","navigate","get","then","res","data","catch","s","emit","userId","_id","on","msg","roomId","from","to","fetchMessages","off","current","setInterval","clearInterval","err","console","error","send","e","preventDefault","trim","body","content","post","logout","removeItem","className","children","style","display","alignItems","gap","marginBottom","name","split","map","slice","join","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","flex","color","email","type","id","onClick","f","document","getElementById","files","alert","fd","FormData","append","headers","setItem","stringify","window","location","reload","filter","u","fontWeight","currentUserId","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["F:/Coding/MERN/client/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api';\r\nimport MessageList from '../components/MessageList';\r\nimport { connectSocket, getSocket, disconnectSocket } from '../socket';\r\n\r\nexport default function Chat(){\r\n  const [users, setUsers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [text, setText] = useState('');\r\n  const me = JSON.parse(localStorage.getItem('user') || 'null');\r\n  const pollingRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    if (!me) return;\r\n    API.get('/api/users').then(res => setUsers(res.data)).catch(()=>{});\r\n    // connect socket and set presence\r\n    const s = connectSocket();\r\n    s.emit('presence', { userId: me._id });\r\n    s.on('message', msg => {\r\n      // if message is for selected or for current user, refresh\r\n      if (selected && (msg.roomId === selected._id || msg.from === selected._id || msg.to === selected._id)){\r\n        fetchMessages();\r\n      }\r\n      // else you could show a badge/notification\r\n    });\r\n    return ()=>{\r\n      // cleanup\r\n      s.off('message');\r\n    };\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if (!selected) return;\r\n    fetchMessages();\r\n    pollingRef.current = setInterval(fetchMessages, 3000);\r\n    return ()=> clearInterval(pollingRef.current);\r\n  },[selected]);\r\n\r\n  useEffect(()=>{\r\n    return ()=>{ disconnectSocket(); }\r\n  },[]);\r\n\r\n  const fetchMessages = async () => {\r\n    try{\r\n      const res = await API.get('/api/messages/' + selected._id);\r\n      setMessages(res.data);\r\n    }catch(err){ console.error(err); }\r\n  }\r\n\r\n  const send = async e => {\r\n    e.preventDefault();\r\n    if (!text.trim() || !selected) return;\r\n    try{\r\n        const body = { to: selected._id, content: text };\r\n        const res = await API.post('/api/messages', body);\r\n        // emit via socket for live update\r\n        const s = getSocket();\r\n        if (s) s.emit('sendMessage', res.data);\r\n        setText('');\r\n        fetchMessages();\r\n    }catch(err){ console.error(err); }\r\n  }\r\n\r\n  const logout = ()=>{\r\n    // stop polling\r\n    if (pollingRef.current) clearInterval(pollingRef.current);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"sidebar\">\r\n        <div style={{display:'flex',alignItems:'center',gap:10,marginBottom:8}}>\r\n          <div className=\"avatar\">{me?.name?.split(' ').map(s=>s[0]).slice(0,2).join('').toUpperCase()}</div>\r\n          <div style={{flex:1}}>\r\n            <div className=\"me\">{me?.name}</div>\r\n            <small style={{color:'#64748b'}}>{me?.email}</small>\r\n          </div>\r\n        </div>\r\n        <div style={{marginBottom:8}}>\r\n          <input type=\"file\" id=\"avatarFile\" />\r\n          <button onClick={async ()=>{\r\n            const f = document.getElementById('avatarFile').files[0];\r\n            if (!f) return alert('Pick a file first');\r\n            const fd = new FormData(); fd.append('avatar', f);\r\n            const res = await API.post('/api/users/avatar', fd, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n            localStorage.setItem('user', JSON.stringify(res.data));\r\n            window.location.reload();\r\n          }}>Upload avatar</button>\r\n        </div>\r\n        <button className=\"logout\" onClick={logout}>Logout</button>\r\n        <h4>Users</h4>\r\n        <div className=\"users\">\r\n          {users.filter(u => u._id !== me?._id).map(u => (\r\n            <div key={u._id} className={`user ${selected?._id===u._id?'active':''}`} onClick={()=>setSelected(u)}>\r\n              <div className=\"avatar\">{u.name.split(' ').map(s=>s[0]).slice(0,2).join('').toUpperCase()}</div>\r\n              <div style={{flex:1}}>\r\n                <div style={{fontWeight:600}}>{u.name}</div>\r\n                <small style={{color:'#64748b'}}>{u.email}</small>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-area\">\r\n        {selected ? (\r\n          <>\r\n            <div className=\"chat-header\">Chat with {selected.name}</div>\r\n            <MessageList messages={messages} currentUserId={me?._id} />\r\n            <form className=\"composer\" onSubmit={send}>\r\n              <input value={text} onChange={e=>setText(e.target.value)} placeholder=\"Type a message...\" />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"empty\">Select a user to start chatting</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}